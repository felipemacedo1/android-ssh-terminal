name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Run Gradle clean
      run: ./gradlew clean --no-daemon
      
    - name: Run unit tests
      run: ./gradlew test --stacktrace --no-daemon
      continue-on-error: false
      
    - name: Generate test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/test-results/
        if-no-files-found: warn
        
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace --no-daemon
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        if-no-files-found: error
        
    - name: Run Lint
      run: ./gradlew lintDebug --stacktrace --no-daemon
      continue-on-error: true
      
    - name: Upload lint report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-report
        path: |
          app/build/reports/lint-results-*.html
          app/build/reports/lint-results-*.xml
        if-no-files-found: warn

  instrumentation-tests:
    name: Instrumentation Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        api-level: [30]
        target: [google_apis]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: Cache AVD
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}-${{ matrix.target }}
        
    - name: Run instrumentation tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: pixel_5
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedCheck --stacktrace --no-daemon
        
    - name: Upload instrumentation test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: instrumentation-test-results-api-${{ matrix.api-level }}
        path: |
          app/build/reports/androidTests/
          app/build/outputs/androidTest-results/
        if-no-files-found: warn
